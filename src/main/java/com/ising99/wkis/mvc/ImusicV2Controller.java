package com.ising99.wkis.mvc;import com.ising99.wkis.common.ErrorCode;import com.ising99.wkis.domain.*;import com.ising99.wkis.service.ImusicService;import org.apache.log4j.Logger;import org.json.JSONArray;import org.json.JSONObject;import org.springframework.stereotype.Controller;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.ResponseBody;import javax.annotation.Resource;import java.util.ArrayList;import java.util.HashMap;import java.util.List;import java.util.Map;@Controller@RequestMapping("imusic/v2")public class ImusicV2Controller extends BaseController {    private static final Logger logger = Logger.getLogger(ImusicV2Controller.class);    @Resource    ImusicService imusicService;    /**     * 获取频道版本随意听版本     *     * @return     */    @RequestMapping("channel/ver")    @ResponseBody    public String getVersion(Integer language) throws Exception {/** * type 定为5 */        String version = imusicService.getVersionInfoByAppId(5, language);        if (version == null) {            version = "";        }        return "{\"version\":\"" + version + "\"}";    }    /**     * 获取频道列表及相关信息     *     * @return     */    @RequestMapping("/first_channel")    @ResponseBody    public String getChannelList(Integer language) throws Exception {        if (language == null) {            this.responseErrorCode(ErrorCode.PARAMETER_ERROR);            return String.valueOf(ErrorCode.PARAMETER_ERROR);        }        return "";    }    /**     * 获取随意听歌曲列表     *     * @param first_channel_id     * @return     */    @RequestMapping("/sub_channel")    @ResponseBody    public String getMusicList(Integer first_channel_id) throws Exception {        if (first_channel_id == null) {            this.responseErrorCode(ErrorCode.PARAMETER_ERROR);            return String.valueOf(ErrorCode.PARAMETER_ERROR);        }        List<ImusicChannelV2> channelV2List = imusicService.getChannelListBy23Layer();        int contentLayer = 0;        List<ImusicChannelV2> secondLayerList = new ArrayList<ImusicChannelV2>();        for (ImusicChannelV2 imusicChannel : channelV2List) {            if (imusicChannel.getParentid() == first_channel_id) {                secondLayerList.add(imusicChannel);                if (contentLayer == 0) {                    //判断图片和标题在哪一层                    if (hasThirdLayer(imusicChannel.getId(), channelV2List)) {                        contentLayer = 3;//图片和标题在第三层                    } else {                        contentLayer = 2;//图片和标题在第二层                    }                }            }        }        if (secondLayerList.size() == 0) {            return "[]";        }        JSONArray jsonArray = new JSONArray();        if (contentLayer == 2) {            JSONObject jsonObject = new JSONObject();            //简体的《全部》和繁体的《全部》是一样的字。就没有判断language            jsonObject.put("title", "全部");            JSONArray ja = new JSONArray();            for (ImusicChannelV2 imusicChannel : secondLayerList) {                Map map = new HashMap();                map.put("id", imusicChannel.getId());                map.put("title", imusicChannel.getName());                map.put("image", imusicChannel.getImage());                ja.put(map);            }            jsonObject.put("item", ja);            jsonArray.put(jsonObject);        } else if (contentLayer == 3) {            for (ImusicChannelV2 secondChannel : secondLayerList) {                JSONObject jsonObject = new JSONObject();                jsonObject.put("title", secondChannel.getName());                JSONArray ja = new JSONArray();                for (ImusicChannelV2 thirdChannel : channelV2List) {                    if (thirdChannel.getLayer() == 3 && thirdChannel.getParentid() == secondChannel.getId()) {                        Map map = new HashMap();                        map.put("id", thirdChannel.getId());                        map.put("title", thirdChannel.getName());                        map.put("image", thirdChannel.getImage());                        ja.put(map);                    }                }                jsonObject.put("item", ja);                jsonArray.put(jsonObject);            }        }        return jsonArray.toString();    }    /**     * 第三层频道中是否有上一级id为secondId的     *     * @param secondId     * @param channelV2List     * @return     */    private boolean hasThirdLayer(int secondId, List<ImusicChannelV2> channelV2List) {        for (ImusicChannelV2 imusicChannel : channelV2List) {            if (imusicChannel.getParentid() == secondId) {                return true;            }        }        return false;    }}